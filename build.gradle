ext.springVersion = "4.0.0.RELEASE"
ext.googleApis = "v1-rev58-1.21.0"

buildscript {
    ext {
        springBootVersion = '1.2.5.RELEASE'
    }
    repositories {
        maven { url "http://repo.spring.io/libs-release" }
        maven { url "http://repo.spring.io/libs-snapshot" }
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

subprojects {
  apply plugin:"java"
  apply plugin:"eclipse"

  sourceCompatibility = 1.8
  targetCompatibility = 1.8

  [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

  version = '0.0.1'

  repositories {
    mavenCentral()
    maven { url "http://repo.spring.io/release/" }
    maven { url "http://repo.spring.io/milestone/" }
  }
}

project(":repositories") {
  dependencies {
    compile "org.springframework:spring-context:$springVersion"
    compile "org.springframework:spring-orm:$springVersion"
    compile "org.springframework:spring-aspects:$springVersion"

    compile "org.hibernate:hibernate-entitymanager:4.3.1.Final"
    compile("org.springframework.data:spring-data-jpa:1.9.0.RELEASE"){
      exclude module: 'slf4j-api'
      exclude module: 'jcl-over-slf4j'
    }
    compile 'org.slf4j:slf4j-log4j12:1.7.12'
    compile 'com.h2database:h2:1.3.175'
    compile 'org.postgresql:postgresql:9.3-1100-jdbc4'
    
    testCompile "org.springframework:spring-test:$springVersion"
    testCompile 'junit:junit:4.11'
  }
}

project(":services") {
  dependencies {
    compile (project(":repositories")) {
          exclude module: "slf4j-log4j12"
          exclude module: "logback-classic"
      }

    compile "org.springframework:spring-context:$springVersion"
    compile "org.springframework:spring-aspects:$springVersion"
    compile 'org.springframework.security:spring-security-web:3.2.5.RELEASE'
    compile 'org.slf4j:slf4j-log4j12:1.7.12'
    compile "com.google.apis:google-api-services-storage:$googleApis"
    compile 'org.apache.velocity:velocity:1.7'
    compile 'javax.mail:mail:1.4.3'

    testCompile "org.springframework:spring-test:$springVersion"
    testCompile 'junit:junit:4.11'
  }
}

project(":web") {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'spring-boot'
    apply plugin: 'application'

    sourceCompatibility = 1.8

    compileJava {
        targetCompatibility = 1.8
    }

    mainClassName = "com.codigoartesanal.lupa.Application"

    repositories {
        jcenter()
        mavenCentral()
        maven { url "http://repo.spring.io/libs-release" }
        maven { url "http://repo.spring.io/libs-snapshot" }
        maven { url "http://maven.springframework.org/milestone" }
    }

    configurations {
        providedRuntime
        compile.exclude module: 'spring-boot-starter-logging'
    }

    dependencies {
        compile (project(":services")) {
            exclude module: "slf4j-log4j12"
            exclude module: "logback-classic"
        }

        compile ('org.springframework.boot:spring-boot-starter-web') {
            exclude module: "spring-boot-starter-logging"
            exclude module: "slf4j-log4j12"
            exclude module: "logback-classic"
        }
        compile 'org.springframework.boot:spring-boot-gradle-plugin:1.2.2.RELEASE'

        providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
        compile 'org.springframework.boot:spring-boot-starter-security'
        compile ('org.springframework.boot:spring-boot-starter-actuator') {
            exclude module: "logback-classic"
        }
        compile 'org.springframework.boot:spring-boot-starter-aop'

        compile 'commons-codec:commons-codec:1.4'
        compile('commons-httpclient:commons-httpclient:3.1') {
            exclude group: 'commons-logging'
        }
        compile 'commons-io:commons-io:2.4'

        compile 'org.apache.httpcomponents:httpclient:4.3.4'
        compile 'org.apache.httpcomponents:httpcore:4.0.1'

        compile 'com.google.guava:guava:17.0'
        compile 'joda-time:joda-time:2.4'
        compile('net.sf.ehcache:ehcache-core:2.6.9') {
            exclude group: 'commons-logging'
        }
        compile 'org.slf4j:slf4j-log4j12:1.7.12'

        testCompile 'org.springframework.boot:spring-boot-starter-test'
        testCompile 'junit:junit'
        testCompile 'org.assertj:assertj-core:1.7.0'
        testCompile 'org.mockito:mockito-core:1.10.8'
        testCompile 'com.jayway.restassured:rest-assured:2.3.4'

        compile fileTree(dir: 'lib', include: ['*.jar'])
    }

    task stage(type: Copy, dependsOn: [clean, build]) {
        from jar.archivePath
        into project.rootDir
        rename {
            'app.jar'
        }
    }
    stage.mustRunAfter(clean)

    clean << {
        project.file('app.jar').delete()
    }

}
